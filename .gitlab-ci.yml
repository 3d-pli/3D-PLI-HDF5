stages:
  - lint
  - build
  - test
  - package
  - package-install

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  DEBIAN_FRONTEND: noninteractive

.before_script_template:
  before_script:
    - apt-get update -qq
    - apt-get install -y git gpg wget
    - git submodule update --init --recursive

.before_script_template_lint:
  before_script:
    - dnf update -y
    - dnf install dnf-plugins-core -y
    - dnf config-manager --set-enabled powertools
    - dnf install -y cmake gcc-toolset-11 gtest gtest-devel

lint:cppcheck:
  extends: .before_script_template_lint
  stage: lint
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image: rockylinux:8
  script:
    - dnf install -y cppcheck
    - cppcheck --std=c++17
      --language=c++
      --error-exitcode=1
      --enable=all
      --suppress=unmatchedSuppression
      --suppress=missingIncludeSystem
      --suppress=unusedFunction
      src/*.cpp src/*/*.h bin/*.cpp src/*/*.tpp

lint:clang-format:
  extends: .before_script_template_lint
  stage: lint
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image: rockylinux:8
  script:
    - dnf install -y clang-tools-extra
    - clang-format --style=file -i src/*.cpp src/*/*.h src/*/*.tpp

lint:cpplint:
  extends: .before_script_template_lint
  stage: lint
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image: rockylinux:8
  script:
    - dnf install -y python3 python3-pip
    - pip3 install cpplint
    - cpplint --filter=-readability/fn_size,-whitespace/indent,-whitespace/comments src/*.cpp src/*/*.h bin/*.cpp src/*/*.tpp

build:ubuntu:
  extends: .before_script_template
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image: ubuntu:22.04
  script:
    - apt-get install -y cmake make gcc g++ libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev nlohmann-json3-dev
    - mkdir build
    - cd build
    - cmake -DPLIHDF5_USE_LINTING=OFF ..
    - make
  artifacts:
    paths:
      - build/
    expire_in: 20 minutes

package:ubuntu22.04:
  extends: .before_script_template
  stage: package
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image: ubuntu:22.04
  script:
    - apt-get install -y cmake make gcc g++ libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev nlohmann-json3-dev dpkg-dev lsb-release
    - if [ -d "build" ]; then rm -r build; fi
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=OFF -DPLIHDF5_USE_LINTING=OFF ..
    - make
    - cpack
  artifacts:
    paths:
      - build/plihdf5_2.0.0_amd64-devel.deb
      - build/plihdf5_2.0.0_amd64-runtime.deb
    expire_in: 1 week

package:ubuntu20.04:
  extends: .before_script_template
  stage: package
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image: ubuntu:20.04
  script:
    - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
    - echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null
    - apt-get update
    - apt-get install -y cmake make gcc g++ libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev nlohmann-json3-dev dpkg-dev lsb-release
    - if [ -d "build" ]; then rm -r build; fi
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=OFF -DPLIHDF5_USE_LINTING=OFF ..
    - make
    - cpack
  artifacts:
    paths:
      - build/plihdf5_2.0.0_amd64-devel.deb
      - build/plihdf5_2.0.0_amd64-runtime.deb
    expire_in: 1 week

package-install:ubuntu20.04:
  extends: .before_script_template
  stage: package-install
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image: ubuntu:20.04
  dependencies:
    - package:ubuntu20.04
  script:
    - apt-get update -qq
    - apt-get install -y ./build/plihdf5_2.0.0_amd64-devel.deb ./build/plihdf5_2.0.0_amd64-runtime.deb

package-install:ubuntu22.04:
  extends: .before_script_template
  stage: package-install
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image: ubuntu:22.04
  dependencies:
    - package:ubuntu22.04
  script:
    - apt-get update -qq
    - apt-get install -y ./build/plihdf5_2.0.0_amd64-devel.deb ./build/plihdf5_2.0.0_amd64-runtime.deb

test:ubuntu:
  extends: .before_script_template
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image: ubuntu:22.04
  script:
    - apt-get install -y cmake make gcc g++ libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev nlohmann-json3-dev
    - if [ -d "build" ]; then rm -r build; fi
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=ON -DPLIHDF5_USE_LINTING=OFF ..
    - make
    - ctest --output-on-failure
  dependencies:
    - build:ubuntu
  tags:
    - docker
    - gpu
