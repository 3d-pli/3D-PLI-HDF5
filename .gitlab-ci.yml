stages:
  - lint
  - build
  - package
  - install
#   - test

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  DEBIAN_FRONTEND: noninteractive

.before_script_template:
  before_script:
    - apt-get update -qq
    - apt-get install -y git
    - git submodule update --init --recursive

.before_script_template_lint:
  before_script:
    - dnf update -y
    - dnf install dnf-plugins-core -y
    - dnf config-manager --set-enabled powertools
    - dnf install -y cmake gcc-toolset-11 gtest gtest-devel

lint:cppcheck:
  extends: .before_script_template_lint
  stage: lint
  image: rockylinux:8
  script:
    - dnf install -y cppcheck
    - cppcheck --std=c++17
      --language=c++
      --error-exitcode=1
      --enable=all
      --suppress=unmatchedSuppression
      --suppress=missingIncludeSystem
      --suppress=unusedFunction
      src/*.cpp src/*/*.h bin/*.cpp

lint:clang-format:
  extends: .before_script_template_lint
  stage: lint
  image: rockylinux:8
  script:
    - dnf install -y clang-tools-extra
    - clang-format --style=file -i src/*.cpp src/*/*.h

lint:cpplint:
  extends: .before_script_template_lint
  stage: lint
  image: rockylinux:8
  script:
    - dnf install -y python3 python3-pip
    - pip3 install cpplint
    - cpplint --filter=-readability/fn_size,-whitespace/indent,-whitespace/comments src/*.cpp src/*/*.h bin/*.cpp

build:ubuntu:
  extends: .before_script_template
  stage: build
  image: ubuntu:22.04
  script:
    - apt-get install -y cmake make gcc g++ libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev nlohmann-json3-dev
    - mkdir build
    - cd build
    - cmake -DPLIHDF5_USE_LINTING=OFF ..
    - make

package:ubuntu22.04:
  extends: .before_script_template
  stage: package
  image: ubuntu:22.04
  script:
    - apt-get install -y cmake make gcc g++ libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev nlohmann-json3-dev dpkg-dev lsb-release
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=OFF -DPLIHDF5_USE_LINTING=OFF ..
    - make
    - cpack
  artifacts:
    paths:
      - build/plihdf5_1.0.1_amd64-devel.deb
      - build/plihdf5_1.0.1_amd64-runtime.deb

package:ubuntu20.04:
  extends: .before_script_template
  stage: package
  image: ubuntu:20.04
  script:
    - apt-get install -y cmake make gcc g++ libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev nlohmann-json3-dev dpkg-dev lsb-release
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=OFF -DPLIHDF5_USE_LINTING=OFF ..
    - make
    - cpack
  artifacts:
    paths:
      - build/plihdf5_1.0.1_amd64-devel.deb
      - build/plihdf5_1.0.1_amd64-runtime.deb

install:ubuntu20.04:
  extends: .before_script_template
  stage: install
  image: ubuntu:20.04
  dependencies:
    - package:ubuntu20.04
  script:
    - apt-get update -qq
    - apt-get install -y ./build/plihdf5_1.0.1_amd64-devel.deb ./build/plihdf5_1.0.1_amd64-runtime.deb

install:ubuntu22.04:
  extends: .before_script_template
  stage: install
  image: ubuntu:22.04
  dependencies:
    - package:ubuntu22.04
  script:
    - apt-get update -qq
    - apt-get install -y ./build/plihdf5_1.0.1_amd64-devel.deb ./build/plihdf5_1.0.1_amd64-runtime.deb
# test:ubuntu:
#   stage: test
#   image: ubuntu:22.04
#   script:
#     - apt-get install -y cmake make gcc g++ libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev
#     - cd build
#     - make test
#   dependencies:
#     - build:ubuntu
