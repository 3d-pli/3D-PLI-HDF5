name: Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  lint-cppcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Requirements
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev nlohmann-json3-dev g++ gcc cppcheck
      - name: Run CppCheck
        run: cppcheck --std=c++17 --language=c++ --error-exitcode=1 --enable=all --suppress=unmatchedSuppression --suppress=missingIncludeSystem --suppress=unusedFunction ${{github.workspace}}/src/*.cpp ${{github.workspace}}/src/PLIHDF5/*

  lint-cpplint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Requirements
        run: pip3 install cpplint
      - name: Run CppLint
        run: cpplint --filter=-readability/fn_size,-whitespace/indent,-whitespace/comments ${{github.workspace}}/src/*.cpp ${{github.workspace}}/src/PLIHDF5/*

  lint-clang-tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Install Requirements
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y clang-tidy libopenmpi-dev libhdf5-dev libhdf5-openmpi-dev libssl-dev nlohmann-json3-dev g++ gcc
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: Run Clang-Tidy
        run: clang-tidy -p=${{github.workspace}}/build ${{github.workspace}}/src/*.cpp ${{github.workspace}}/src/PLIHDF5/*

  lint-clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Requirements
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y clang-format
      - name: Run Clang-Format
        run: clang-format --style=file -i ${{github.workspace}}/src/*.cpp ${{github.workspace}}/src/PLIHDF5/*
